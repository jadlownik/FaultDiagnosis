PATH_EXAMPLES = 'examples\\'
PRINT_TO_CONSOLE = True
TITLE = 'title'
UNKNOWN_VARIABLES = 'x'
FAULTS = 'f'
KNOWN_VARIABLES = 'z'
EQUATIONS = 'r'
OBSERVATIONS = 'o'
PREFIX_FAULT = 'f_'
PREFIX_SIGNAL = 'u_'
RELATIONS = 'rels'
OPENAI_API_MODEL = 'gpt-4o'
JSON_KEY_CONFLICTS = 'minimal_conflicts'
JSON_KEY_DIAGNOSIS = 'minimal_diagnosis'
SD_INPUT = 'Input'
SD_OUTPUT = 'Output'
SD_ADD_SYMBOL = '+'
SD_MULT_SYMBOL = '*'
SD_AND_SYMBOL = '∧'
SD_OR_SYMBOL = '∨'
SD_NOT_SYMBOL = '¬'
SD_XOR_SYMBOL = '⊕'
SD_ARITHMETIC_ADD = 'ADD(x) ∧ ¬AB(x) ⇒ Output(x) = Input1(x) + Input2(x)'
SD_ARITHMETIC_MULT = 'MULT(x) ∧ ¬AB(x) ⇒ Output(x) = Input1(x) × Input2(x)'
SD_LOGIC_AND = 'ANDgate(x) ∧ ¬AB(x) ⇒ Output(x) = Input1(x) ∧ Input2(x)'
SD_LOGIC_OR = 'ORgate(x) ∧ ¬AB(x) ⇒ Output(x) = Input1(x) ∨ Input2(x)'
SD_LOGIC_NOT = 'NOTgate(x) ∧ ¬AB(x) ⇒ Output(x) = ¬Input(x)'
SD_LOGIC_XOR = 'XORgate(x) ∧ ¬AB(x) ⇒ Output(x) = Input1(x) ⊕ Input2(x)'
SD_LOGIC_NAND = 'NANDgate(x) ∧ ¬AB(x) ⇒ Output(x) = ¬(Input1(x) ∧ Input2(x))'
SD_LOGIC_NOR = 'NORgate(x) ∧ ¬AB(x) ⇒ Output(x) = ¬(Input1(x) ∨ Input2(x))'
SD_LOGIC_XNOR = 'XNORgate(x) ∧ ¬AB(x) ⇒ Output(x) = ¬(Input1(x) ⊕ Input2(x))'
GPT_SYSTEM_DESC = (
    'The task is to conduct diagnostic reasoning using the DX approach,'
    'to identify minimal conflicts (the smallest sets of system components '
    'that could explain observed malfunctions) and minimal diagnoses (the '
    'smallest sets of components that cannot all be functioning correctly '
    'given observed problems). The Hitting Set Tree (HST) algorithm should '
    'be used to determine minimal diagnoses from minimal conflicts. Within the <examples></examples> '
    'tags, you will find sample input data (<input></input>) and expected '
    'output data (<output></output>). COMPS lists all components in the '
    'system, OBS denotes the states of components during system malfunctions, '
    'and SD presents logical rules in First-Order Logic (FOL) describing '
    'expected system behavior and identifying violated conditions. The output '
    'data are provided in JSON format.'
                  )
GPT_EXAMPLES = (
    '<examples>'
        '<example_1>'
            '<input>'
                'COMPS = { A1, A2, M1, M2, M3 } '
                'SD = { ADD(x) ∧ ¬AB(x) ⇒ Output(x) = Input1(x) + Input2(x), '
                        'MULT(x) ∧ ¬AB(x) ⇒ Output(x) = Input1(x) × Input2(x), '
                        'ADD(A1), ADD(A2), MULT(M1), MULT(M2), MULT(M3), '
                        'Output(M1) = Input1(A1), Output(M2) = Input2(A1), '
                        'Output(M2) = Input1(A2), Output(M3) = Input2(A2), '
                        'Input2(M1) = Input1(M3) } '
                'OBS = { Input1(M1) = 2, Input2(M1) = 3, Input1(M2) = 2, '
                        'Input2(M2) = 3, Input1(M3) = 3, Input2(M3) = 2, '
                        'Output(A1) = 12, Output(A2) = 12 } '
            '</input>'
            '<output>'
            '{'
            '"minimal_conflicts": []'
            '"minimal_diagnosis": []'
            '}'
            '</output>'
        '</example_1>'
        '<example_2>'
            '<input>'
                'COMPS = { A1, A2, M1, M2, M3 }'
                'SD = { ADD(x) ∧ ¬AB(x) ⇒ Output(x) = Input1(x) + Input2(x),'
                        'MULT(x) ∧ ¬AB(x) ⇒ Output(x) = Input1(x) × Input2(x),'
                        'ADD(A1), ADD(A2), MULT(M1), MULT(M2), MULT(M3),'
                        'Output(M1) = Input1(A1), Output(M2) = Input2(A1),'
                        'Output(M2) = Input1(A2), Output(M3) = Input2(A2),'
                        'Input2(M1) = Input1(M3) }'
                'OBS = { Input1(M1) = 2, Input2(M1) = 3, Input1(M2) = 2,'
                        'Input2(M2) = 3, Input1(M3) = 3, Input2(M3) = 2,'
                        'Output(A1) = 10, Output(A2) = 12 }'
            '</input>'
            '<output>'
            '{'
            '"minimal_conflicts": ['
            '["A1", "M1", "M2"],'
            '["A1", "A2", "M1", "M3"]'
            '],'
            '"minimal_diagnosis": ['
            '["A1"],'
            '["M1"],'
            '["A2", "M2"],'
            '["M2", "M3"]'
            ']'
            '}'
            '</output>'
        '</example_2>'
        '<example_3>'
            '<input>'
                'COMPS = { A1, A2, M1 }'
                'SD = { ADD(x) ∧ ¬AB(x) ⇒ Output(x) = Input1(x) + Input2(x),'
                        'MULT(x) ∧ ¬AB(x) ⇒ Output(x) = Input1(x) × Input2(x),'
                        'ADD(A1), ADD(A2), MULT(M1),'
                        'Output(A1) = Input1(M1), Output(A2) = Input2(M1) }'
                'OBS = { Input1(A1) = 1, Input2(A1) = 1,'
                        'Input1(A2) = 1, Input2(A2) = 1,'
                        'Output(M1) = 4 }'
            '</input>'
            '<output>'
            '{'
            '"minimal_conflicts": [],'
            '"minimal_diagnosis": []'
            '}'
            '</output>'
        '</example_3>'
        '<example_4>'
            '<input>'
                'COMPS = { A1, A2, M1 }'
                'SD = { ADD(x) ∧ ¬AB(x) ⇒ Output(x) = Input1(x) + Input2(x),'
                        'MULT(x) ∧ ¬AB(x) ⇒ Output(x) = Input1(x) × Input2(x),'
                        'ADD(A1), ADD(A2), MULT(M1),'
                        'Output(A1) = Input1(M1), Output(A2) = Input2(M1) }'
                'OBS = { Input1(A1) = 1, Input2(A1) = 1,'
                        'Input1(A2) = 1, Input2(A2) = 1,'
                        'Output(M1) = 2 }'
            '</input>'
            '<output>'
            '{'
            '"minimal_conflicts": ['
            '["A1", "A2", "M1"]'
            '],'
            '"minimal_diagnosis": ['
            '["A1"],'
            '["A2"],'
            '["M1"]'
            ']'
            '}'
            '</output>'
        '</example_4>'
    '</examples>'
            )
